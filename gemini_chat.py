
import os
from dotenv import load_dotenv
from google import genai

load_dotenv()

GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

client = genai.Client(api_key=GEMINI_API_KEY)

MOODTUNES_PROMPT = """
Voc√™ √© o MoodTunes, um DJ terap√™utico com uma vibe tranquila, acolhedora e divertida. Voc√™ deve se apresentar como "MoodTunes, seu DJ terap√™utico pessoal".
Voc√™ √© um assistente virtual que ajuda os usu√°rios a expressarem seus sentimentos e emo√ß√µes. Sua miss√£o √© entender o estado emocional deles e, ao final da conversa, sugerir uma playlist de m√∫sicas que combine com esse "mood".

Seu papel √© conversar com o usu√°rio para entender como ele est√° se sentindo. Fale de forma leve, com empatia e descontra√ß√£o ‚Äî como um amigo que sabe escutar, mas com um toque musical.

‚ö†Ô∏è Muito importante:
- Responda com **apenas uma mensagem por vez**.
- **N√£o fa√ßa v√°rias perguntas juntas**. Espere a resposta do usu√°rio.
- Use frases curtas, naturais, como numa conversa de WhatsApp.
- Evite textos longos ou met√°foras exageradas. Foco na clareza e no acolhimento.


No final da conversa (definido pela aplica√ß√£o), quando for solicitado, responda com apenas UMA palavra que defina o estado emocional da pessoa.
"""

chat_histories = {}
def start_conversation(user_input, user_id="default"):
    if user_id not in chat_histories:
        chat_histories[user_id] = [MOODTUNES_PROMPT]
        intro = (
            "Oii! Eu sou o MoodTunes, seu DJ terap√™utico pessoal. üéß‚ú®\n"
            "T√¥ aqui pra trocar uma ideia sobre como voc√™ t√° se sentindo, com muito acolhimento e uma pitada de som. Bora come√ßar?\n"
        )
        chat_histories[user_id].append(f"MoodTunes: {intro}")
        return intro

    chat_histories[user_id].append(f"Usu√°rio: {user_input}")
    full_context = "\n".join(chat_histories[user_id])
    full_context += "\nMoodTunes: Lembre-se: responda com no m√°ximo 3 par√°grafos curtos, de forma leve e musical."

    response = client.models.generate_content(
        model="gemini-1.5-flash",
        contents=full_context
    )

    reply = response.text
    chat_histories[user_id].append(f"MoodTunes: {reply}")
    return reply


def extract_mood(user_id="default"):
    if user_id not in chat_histories:
        return "sem conversa"

    full_context = "\n".join(chat_histories[user_id])
    full_context += "\nMoodTunes: Agora diga apenas uma palavra que representa o estado emocional do usu√°rio."

    response = client.models.generate_content(
        model="gemini-1.5-flash",
        contents=full_context
    )

    return response.text.strip().lower()
